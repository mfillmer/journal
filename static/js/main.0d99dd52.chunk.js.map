{"version":3,"sources":["redux/sections.ts","redux/date.tsx","redux/getRatingId.tsx","redux/ratings.tsx","redux/ui.tsx","redux/store.tsx","hooks/useCurrentSection.tsx","section/StyledInputElement.tsx","section/SectionQuickAdd.tsx","hooks/useAddSection.tsx","layout/IntroScreen.tsx","layout/Breadcrumbs.tsx","hooks/useBreadcrumbs.tsx","hooks/useDate.tsx","layout/DateView.tsx","section/SectionHeader.tsx","hooks/useHeading.tsx","hooks/useGoUp.tsx","hooks/useChildrenRatings.ts","hooks/useSectionRating.tsx","hooks/useRatingColor.ts","hooks/useSectionComment.tsx","hooks/useChildComments.tsx","hooks/useSetItem.tsx","section/SectionListItem.tsx","hooks/useHasChildren.tsx","section/SectionList.tsx","hooks/useSections.tsx","section/SectionCommentInput.tsx","section/SectionRatingInput.tsx","section/SectionRating.tsx","hooks/useCurrentItem.tsx","layout/Journal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sectionSlice","createSlice","name","initialState","reducers","addSection","state","action","uuid","v4","parent","payload","label","sectionReducer","reducer","actions","navigate","val","delta","date","Date","setDate","getDate","getTime","dateSlice","now","goForward","goBack","dateReducer","getRatingId","section","join","ratingSlice","setRating","ratingReducer","uiSlice","setItem","currentItem","uiReducer","store","configureStore","sections","ratings","ui","preloadedState","raw","localStorage","getItem","JSON","parse","getPersistedState","middleware","getDefaultMiddleware","concat","logger","subscribe","stringify","persistState","getState","useAppSelector","useSelector","useCurrentSection","match","useMatch","params","StyledInputElement","styled","CustomInput","React","forwardRef","props","ref","InputUnstyled","components","Input","SectionQuickAdd","useRef","useState","value","setValue","dispatch","useDispatch","current","useAddSection","onSubmit","e","preventDefault","stopPropagation","firstChild","focus","style","display","justifyContent","Box","padding","width","alignItems","overflow","borderRadius","bgcolor","onChange","target","placeholder","IconButton","type","Add","IntroScreen","Stack","Typography","variant","textAlign","marginY","paragraph","marginBottom","Breadcrumbs","breadcrumbs","depth","includeCurrent","Object","values","parts","parentUuid","find","s","length","filter","p","useBreadcrumbs","map","b","i","to","useDate","timestamp","dateString","toLocaleDateString","DateView","ButtonGroup","sx","Button","onClick","ArrowBackIosOutlined","flex","ArrowForwardIosOutlined","SectionHeader","heading","useHeading","goUp","useNavigate","useGoUp","spacing","direction","ArrowBackIos","useChildrenRatings","c","id","r","useSectionRating","rating","ratingColors","useSectionComment","childComments","comment","trim","useChildComments","comments","setComment","useSetItem","item","SectionListItem","bgColor","sectionUuid","childRatings","avgRating","Math","ceil","reduce","a","useRatingColor","hasChildren","noWrap","marginRight","wordBreak","transition","fontSize","undefined","ArrowForwardIos","SectionList","currentUuid","useSections","index","SectionCommentInput","TextField","minRows","multiline","size","currentTarget","SectionRatingInput","items","Array","fill","ToggleButtonGroup","fullWidth","_","ToggleButton","SectionRating","close","Drawer","borderTopLeftRadius","borderTopRightRadius","anchor","open","maxWidth","marginX","boxSizing","minHeight","flexDirection","Settings","title","Close","Journal","App","isUsed","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0d99dd52.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v4 } from 'uuid'\n\nexport interface SectionItem {\n  uuid: string\n  label: string\n  parent: string\n}\n\ninterface State {\n  [key: string]: SectionItem\n}\n\nconst initialState = {} as State\n\nconst sectionSlice = createSlice({\n  name: 'sections',\n  initialState,\n  reducers: {\n    addSection: (\n      state,\n      action: PayloadAction<{ label: string; parent?: string }>\n    ) => {\n      const uuid = v4()\n      const parent = action.payload.parent || ''\n      const label = action.payload.label\n      state[uuid] = { uuid, parent, label }\n    },\n  },\n})\n\nexport const sectionReducer = sectionSlice.reducer\nexport const { addSection } = sectionSlice.actions\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst navigate = (val: number, delta: number) => {\n  const date = new Date(val)\n  date.setDate(date.getDate() + delta)\n  return date.getTime()\n}\n\nconst dateSlice = createSlice({\n  name: 'date',\n  initialState: Date.now(),\n  reducers: {\n    goForward: (state) => navigate(state, 1),\n    goBack: (state) => navigate(state, -1),\n  },\n})\n\nexport const dateReducer = dateSlice.reducer\nexport const { goBack, goForward } = dateSlice.actions\n","export const getRatingId = (date: string, section: string) =>\n  [date, section].join('>')\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getRatingId } from './getRatingId'\n\nexport interface Rating {\n  date: string\n  value: number\n  comment: string\n  section: string\n}\n\nconst initialState = {} as { [key: string]: Rating }\n\nconst ratingSlice = createSlice({\n  name: 'ratings',\n  initialState,\n  reducers: {\n    setRating: (state, action: PayloadAction<Rating>) => {\n      const { date, section } = action.payload\n      const id = getRatingId(date, section)\n      state[id] = { ...action.payload }\n    },\n  },\n})\n\nexport const { setRating } = ratingSlice.actions\nexport const ratingReducer = ratingSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { SectionItem } from './sections'\n\ninterface state {\n  currentItem: SectionItem | undefined\n}\n\nconst initialState = {} as state\n\nconst uiSlice = createSlice({\n  initialState,\n  name: 'ui',\n  reducers: {\n    setItem: (state, action: PayloadAction<SectionItem | undefined>) => {\n      state.currentItem = action.payload\n    },\n  },\n})\n\nexport const uiReducer = uiSlice.reducer\nexport const { setItem } = uiSlice.actions\n","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport logger from 'redux-logger'\nimport { dateReducer } from './date'\nimport { ratingReducer } from './ratings'\nimport { sectionReducer } from './sections'\nimport { uiReducer } from './ui'\n\nconst getPersistedState = () => {\n  try {\n    const raw = localStorage.getItem('state') || ''\n    if (process.env.NODE_ENV === 'development') return undefined\n    return JSON.parse(raw)\n  } catch {\n    return undefined\n  }\n}\n\nconst persistState = (state = {}) => {\n  localStorage.setItem('state', JSON.stringify(state))\n}\n\nexport const store = configureStore({\n  reducer: {\n    sections: sectionReducer,\n    ratings: ratingReducer,\n    date: dateReducer,\n    ui: uiReducer,\n  },\n  preloadedState: { ...getPersistedState(), date: Date.now() },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n})\n\nstore.subscribe(() => {\n  persistState(store.getState())\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useMatch } from 'react-router-dom'\nimport { SectionItem } from '../redux/sections'\nimport { useAppSelector } from '../redux/store'\n\nexport const useCurrentSection = (): SectionItem | undefined => {\n  const match = useMatch('/:uuid')\n  const uuid = match?.params.uuid || ''\n  const item = useAppSelector((state) => state.sections[uuid])\n  return item\n}\n","import { InputUnstyled, InputUnstyledProps } from '@mui/material'\nimport { styled } from '@mui/system'\nimport React from 'react'\n\nconst StyledInputElement = styled('input')`\n  min-width: 200px;\n  font-size: 1rem;\n  font-family: IBM Plex Sans, sans-serif;\n  font-weight: 400;\n  flex: 1;\n  line-height: 1.4375em;\n  background: rgb(243, 246, 249);\n  border-radius: 1rem;\n  padding: 6px 10px;\n  border: none;\n  color: #20262d;\n  transition: width 300ms ease;\n\n  &:hover {\n    background: #eaeef3;\n  }\n\n  &:focus {\n    background: white;\n    outline: none;\n  }\n`\n\nexport const CustomInput = React.forwardRef(function CustomInput(\n  props: InputUnstyledProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  return (\n    <InputUnstyled\n      components={{ Input: StyledInputElement }}\n      {...props}\n      ref={ref}\n    />\n  )\n})\n","import { Add } from '@mui/icons-material'\nimport { IconButton } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { FormEvent, useRef, useState } from 'react'\nimport { useAddSection } from '../hooks/useAddSection'\nimport { CustomInput } from './StyledInputElement'\n\nexport const SectionQuickAdd = () => {\n  const ref = useRef<any>(null)\n  const [value, setValue] = useState('')\n  const addSection = useAddSection()\n  const submit = (e: FormEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (!!value) addSection(value)\n    setValue('')\n    ref.current?.firstChild?.focus()\n  }\n  return (\n    <form\n      onSubmit={submit}\n      style={{ display: 'flex', justifyContent: 'center' }}>\n      <Box\n        display='flex'\n        padding='1px 2px 0px'\n        width='300px'\n        alignItems='center'\n        justifyContent='space-between'\n        overflow='hidden'\n        borderRadius='20px'\n        bgcolor='rgb(243, 246, 249)'>\n        <CustomInput\n          ref={ref}\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          placeholder='Bereich hinzufügen'\n        />\n        <IconButton type='submit'>\n          <Add />\n        </IconButton>\n      </Box>\n    </form>\n  )\n}\n","import { useDispatch } from 'react-redux'\nimport { addSection } from '../redux/sections'\nimport { useCurrentSection } from './useCurrentSection'\n\nexport const useAddSection = () => {\n  const dispatch = useDispatch()\n  const current = useCurrentSection()\n  return (label: string) => {\n    dispatch(addSection({ label, parent: current?.uuid }))\n  }\n}\n","import { Stack, Typography } from '@mui/material'\nimport React from 'react'\nimport { SectionQuickAdd } from '../section/SectionQuickAdd'\n\nexport const IntroScreen = () => {\n  return (\n    <Stack alignItems='center'>\n      <Typography variant='h1' textAlign='center' marginY={4}>\n        Das ist dein Journal\n      </Typography>\n      <Typography paragraph textAlign='justify'>\n        Schreibe auf was dich beschäftigt, damit dein Kopf frei bleibt.\n      </Typography>\n      <Typography paragraph textAlign='justify'>\n        Ganz nach dem Prinzip <i>Teile und Herrsche</i> kannst du hier\n        verschiedene Bereiche deines Lebens eintragen und dich jedem einzeln\n        widmen.\n      </Typography>{' '}\n      <Typography paragraph textAlign='justify'>\n        Für jeden Bereich kannst du das entsprechende Stresslevel bewerten und\n        dir Notizen machen. Du kannst auch Bereiche weiter unterteilen, für noch\n        mehr Fokus.\n      </Typography>\n      <Typography paragraph textAlign='justify' marginBottom={10}>\n        Last but not least: Deine Daten sind sicher! Alles bleibt auf diesem\n        Gerät.\n      </Typography>\n      <Typography variant='subtitle1' marginBottom={2}>\n        Starte jetzt\n      </Typography>\n      <SectionQuickAdd />\n    </Stack>\n  )\n}\n","import { Breadcrumbs as MuiBreadcrumbs } from '@mui/material'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { useBreadcrumbs } from '../hooks/useBreadcrumbs'\n\nexport const Breadcrumbs = () => {\n  const breadcrumbs = useBreadcrumbs({ includeCurrent: false })\n\n  return (\n    <MuiBreadcrumbs>\n      {breadcrumbs.map((b, i) => (\n        <Link key={i} to={`/${b.uuid}`}>\n          {b?.label}\n        </Link>\n      ))}\n    </MuiBreadcrumbs>\n  )\n}\n","import { useCurrentSection } from './useCurrentSection'\nimport { SectionItem } from '../redux/sections'\nimport { useAppSelector } from '../redux/store'\n\nexport const useBreadcrumbs = ({\n  depth = 3,\n  includeCurrent = false,\n}: {\n  depth?: number\n  includeCurrent?: boolean\n} = {}) => {\n  const current = useCurrentSection()\n  const sections = useAppSelector((state) => Object.values(state.sections))\n\n  if (!current) return [] as SectionItem[]\n\n  let parts: SectionItem[] = [current]\n\n  while (parts.length <= depth) {\n    const parentUuid = parts[0]?.parent\n    const parent = sections.find((s) => s.uuid === parentUuid)\n    if (!parent) {\n      const root = { label: 'journal', uuid: '', parent: '' }\n      parts = [root, ...parts]\n      break\n    } else {\n      parts = [parent, ...parts]\n    }\n  }\n\n  return parts.filter((p) => includeCurrent || p.uuid !== current.uuid)\n}\n","import { useDispatch } from 'react-redux'\nimport { goBack, goForward } from '../redux/date'\nimport { useAppSelector } from '../redux/store'\n\nexport const useDate = () => {\n  const dispatch = useDispatch()\n  const timestamp = useAppSelector((state) => state.date)\n\n  return {\n    dateString: new Date(timestamp).toLocaleDateString(),\n    goBack: () => dispatch(goBack()),\n    goForward: () => dispatch(goForward()),\n  }\n}\n","import {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from '@mui/icons-material'\nimport { Button, ButtonGroup } from '@mui/material'\nimport React from 'react'\nimport { useDate } from '../hooks/useDate'\n\nexport const DateView = () => {\n  const { dateString, goBack, goForward } = useDate()\n  return (\n    <ButtonGroup sx={{ marginY: 1, display: 'flex' }} variant='outlined'>\n      <Button onClick={goBack}>\n        <ArrowBackIosOutlined />\n      </Button>\n      <Button style={{ flex: 1 }}>{dateString}</Button>\n      <Button onClick={goForward}>\n        <ArrowForwardIosOutlined />\n      </Button>\n    </ButtonGroup>\n  )\n}\n","import React from 'react'\nimport { ArrowBackIos } from '@mui/icons-material'\nimport { IconButton, Stack, Typography } from '@mui/material'\nimport { useGoUp } from '../hooks/useGoUp'\nimport { useHeading } from '../hooks/useHeading'\n\nexport const SectionHeader = () => {\n  const heading = useHeading()\n  const goUp = useGoUp()\n\n  if (!heading) return null\n  return (\n    <Stack spacing={2} direction='row' alignItems='center' onClick={goUp}>\n      <IconButton>\n        <ArrowBackIos />\n      </IconButton>\n      <Typography variant='h1'>{heading}</Typography>\n    </Stack>\n  )\n}\n","import { useCurrentSection } from './useCurrentSection'\n\nexport const useHeading = () => {\n  const label = useCurrentSection()?.label\n  return label || ''\n}\n","import { useNavigate } from 'react-router-dom'\nimport { useCurrentSection } from './useCurrentSection'\n\nexport const useGoUp = () => {\n  const parent = useCurrentSection()?.parent || ''\n  const navigate = useNavigate()\n  return () => navigate(`/${parent}`)\n}\n","import { getRatingId } from '../redux/getRatingId'\nimport {} from '../'\nimport { useAppSelector } from '../redux/store'\nimport { useDate } from './useDate'\n\nexport const useChildrenRatings = (uuid: string) => {\n  const { dateString: date } = useDate()\n  const ratings = useAppSelector((state) => state.ratings)\n\n  const children = useAppSelector((state) =>\n    Object.values(state.sections)\n  ).filter((s) => s.parent === uuid)\n\n  const items = children\n    .map((c) => getRatingId(date, c.uuid))\n    .map((id) => ratings[id])\n    .filter((r) => !!r)\n\n  return items\n}\n","import { useDispatch } from 'react-redux'\nimport { useDate } from './useDate'\nimport { getRatingId } from '../redux/getRatingId'\nimport { setRating } from '../redux/ratings'\nimport { useAppSelector } from '../redux/store'\n\nexport const useSectionRating = (section: string) => {\n  const dispatch = useDispatch()\n  const { dateString: date } = useDate()\n  const id = getRatingId(date, section)\n\n  const rating = useAppSelector(\n    (state) => state.ratings[id] || { section, date }\n  )\n\n  return {\n    rating: rating.value,\n    setRating: (value: any) => {\n      dispatch(setRating({ ...rating, value }))\n    },\n  }\n}\n","import { useChildrenRatings } from './useChildrenRatings'\nimport { useSectionRating } from './useSectionRating'\n\nexport const ratingColors = ['#BAF3B4', '#97C8DB', '#DFB0FF', '#FCBBB1']\nexport const useRatingColor = (sectionUuid: string) => {\n  const childRatings = useChildrenRatings(sectionUuid).map((r) => r?.value)\n  const avgRating = Math.ceil(\n    childRatings.reduce((a, b) => a + b, 0) / childRatings.length\n  )\n  const { rating } = useSectionRating(sectionUuid)\n\n  return ratingColors[rating] || ratingColors[avgRating] || ''\n}\n","import { useDispatch } from 'react-redux'\nimport { useDate } from './useDate'\nimport { getRatingId } from '../redux/getRatingId'\nimport { setRating } from '../redux/ratings'\nimport { useAppSelector } from '../redux/store'\nimport { useChildComments } from './useChildComments'\n\nexport const useSectionComment = (uuid: string) => {\n  const dispatch = useDispatch()\n  const { dateString: date } = useDate()\n  const id = getRatingId(date, uuid)\n  const rating = useAppSelector(\n    (state) => state.ratings[id] || { section: uuid, date }\n  )\n\n  const childComments = useChildComments(uuid)\n\n  return {\n    comments: rating.comment ? [rating.comment] : childComments,\n    setComment: (comment: string) => {\n      dispatch(setRating({ ...rating, comment }))\n    },\n  }\n}\n","import { useAppSelector } from '../redux/store'\nimport { useChildrenRatings } from './useChildrenRatings'\n\nexport const useChildComments = (uuid: string) => {\n  const sections = useAppSelector((state) => state.sections)\n\n  const childRatings = useChildrenRatings(uuid)\n  return childRatings\n    .map((c) => ({ ...c, label: sections[c.section]?.label || '' }))\n    .map((c) => `${c.label && c.label + ':'} ${c?.comment}`.trim())\n}\n","import { useDispatch } from 'react-redux'\nimport { SectionItem } from '../redux/sections'\nimport { setItem } from '../redux/ui'\n\nexport const useSetItem = () => {\n  const dispatch = useDispatch()\n  return (item: SectionItem | undefined) => dispatch(setItem(item))\n}\n","import { ArrowForwardIos } from '@mui/icons-material'\nimport { IconButton, Stack, Typography } from '@mui/material'\nimport React, { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useHasChildren } from '../hooks/useHasChildren'\nimport { useRatingColor } from '../hooks/useRatingColor'\nimport { useSectionComment } from '../hooks/useSectionComment'\nimport { useSetItem } from '../hooks/useSetItem'\nimport { SectionItem } from '../redux/sections'\n\nexport const SectionListItem: FC<{ item: SectionItem }> = ({ item }) => {\n  const setItem = useSetItem()\n  const { comments } = useSectionComment(item.uuid)\n  const bgColor = useRatingColor(item.uuid)\n  const hasChildren = useHasChildren(item)\n  const navigate = useNavigate()\n  const onClick = () => {\n    hasChildren ? navigate(`/${item.uuid}`) : setItem(item)\n  }\n  return (\n    <Stack\n      bgcolor={bgColor}\n      direction='row'\n      padding={1}\n      borderRadius={4}\n      alignItems='center'\n      marginY={1}\n      onClick={onClick}>\n      <Typography\n        variant='h2'\n        noWrap={!comments.length}\n        marginRight={1}\n        sx={{\n          flex: 1,\n          wordBreak: 'break-all',\n          transition: 'all',\n          fontSize: !comments.length ? undefined : '1rem',\n        }}>\n        {item.label}\n      </Typography>\n      {!!comments.length && (\n        <Stack flex='5'>\n          {comments.map((c, i) => (\n            <Typography variant='body1' key={i} sx={{ wordBreak: 'break-all' }}>\n              {c}\n            </Typography>\n          ))}\n        </Stack>\n      )}\n      <IconButton>\n        <ArrowForwardIos />\n      </IconButton>\n    </Stack>\n  )\n}\n","import { SectionItem } from '../redux/sections'\nimport { useAppSelector } from '../redux/store'\n\nexport const useHasChildren = (section: SectionItem): boolean => {\n  const child = useAppSelector((state) =>\n    Object.values(state.sections).find((s) => s.parent === section.uuid)\n  )\n\n  return !!child\n}\n","import { Stack } from '@mui/material'\nimport React from 'react'\nimport { useSections } from '../hooks/useSections'\nimport { SectionListItem } from './SectionListItem'\n\nexport const SectionList = () => {\n  const sections = useSections()\n\n  return (\n    <Stack marginBottom={4}>\n      {sections.map((item, index) => (\n        <SectionListItem key={index} item={item} />\n      ))}\n    </Stack>\n  )\n}\n","import { SectionItem } from '../redux/sections'\nimport { useAppSelector } from '../redux/store'\nimport { useCurrentSection } from './useCurrentSection'\n\nexport const useSections = (): SectionItem[] => {\n  const currentUuid = useCurrentSection()?.uuid || ''\n  const items = useAppSelector((state) => Object.values(state.sections))\n  return items.filter((s) => s.parent === currentUuid)\n}\n","import { TextField } from '@mui/material'\nimport React, { FC } from 'react'\nimport { useSectionComment } from '../hooks/useSectionComment'\n\ninterface props {\n  uuid: string\n}\nexport const SectionCommentInput: FC<props> = ({ uuid }) => {\n  const { comments, setComment } = useSectionComment(uuid)\n  return (\n    <TextField\n      sx={{\n        width: '100%',\n        marginY: 2,\n      }}\n      label='Notiz'\n      minRows={4}\n      multiline={true}\n      variant='outlined'\n      size='small'\n      value={comments[0]}\n      onChange={(e) => setComment(e.currentTarget.value)}\n    />\n  )\n}\n","import { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\nimport React, { FC } from 'react'\nimport { useSectionRating } from '../hooks/useSectionRating'\nimport { ratingColors } from '../hooks/useRatingColor'\n\ninterface props {\n  uuid: string\n}\n\nexport const SectionRatingInput: FC<props> = ({ uuid }) => {\n  const items = Array(4).fill(0)\n  const { rating, setRating } = useSectionRating(uuid)\n\n  return (\n    <div>\n      <Typography variant='subtitle1'>Stresslevel</Typography>\n      <ToggleButtonGroup\n        fullWidth\n        value={rating}\n        size='large'\n        sx={{\n          '.Mui-selected': { bgcolor: ratingColors[rating] },\n          '.Mui-selected:hover': { bgcolor: ratingColors[rating] },\n        }}>\n        {items.map((_, index) => (\n          <ToggleButton\n            fullWidth\n            value={index}\n            onClick={() => setRating(index)}\n            key={index}>\n            {index}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  )\n}\n","import { Close, Settings } from '@mui/icons-material'\nimport { Button, Drawer, IconButton, Stack, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useCurrentItem } from '../hooks/useCurrentItem'\nimport { useSetItem } from '../hooks/useSetItem'\n\nimport { SectionCommentInput } from './SectionCommentInput'\nimport { SectionRatingInput } from './SectionRatingInput'\n\nexport const SectionRating: FC = () => {\n  const navigate = useNavigate()\n  const setItem = useSetItem()\n  const item = useCurrentItem()\n  const close = () => setItem(undefined)\n  const stepInto = () => {\n    if (item) {\n      navigate(`/${item.uuid}`)\n      close()\n    }\n  }\n  return (\n    <Drawer\n      variant='temporary'\n      sx={{ borderTopLeftRadius: 3, borderTopRightRadius: 3 }}\n      anchor='bottom'\n      open={!!item}>\n      <Box\n        padding={2}\n        width='600px'\n        maxWidth='100%'\n        marginX='auto'\n        boxSizing='border-box'\n        minHeight='66vh'\n        display='flex'\n        flexDirection='column'\n        justifyContent='space-evenly'>\n        <Stack\n          direction='row'\n          marginY={4}\n          width='full'\n          alignItems='center'\n          justifyContent='space-between'>\n          <IconButton onClick={stepInto}>\n            <Settings />\n          </IconButton>\n          <Typography variant='h3' title={item?.label} noWrap>\n            {item?.label}\n          </Typography>\n          <IconButton onClick={close}>\n            <Close />\n          </IconButton>\n        </Stack>\n        <SectionRatingInput uuid={item?.uuid || ''} />\n        <SectionCommentInput uuid={item?.uuid || ''} />\n        <Button variant='outlined' fullWidth onClick={close}>\n          Fertig\n        </Button>\n      </Box>\n    </Drawer>\n  )\n}\n","import { SectionItem } from '../redux/sections'\nimport { useAppSelector } from '../redux/store'\n\nexport const useCurrentItem = (): SectionItem | undefined => {\n  const item = useAppSelector((state) => state.ui.currentItem)\n  return item\n}\n","import { Stack } from '@mui/material'\nimport React from 'react'\nimport { Breadcrumbs } from './Breadcrumbs'\nimport { DateView } from './DateView'\nimport { SectionHeader } from '../section/SectionHeader'\nimport { SectionList } from '../section/SectionList'\nimport { SectionQuickAdd } from '../section/SectionQuickAdd'\nimport { SectionRating } from '../section/SectionRating'\n\nexport const Journal = () => (\n  <Stack alignItems='stretch'>\n    <DateView />\n    <Breadcrumbs />\n    <SectionHeader />\n    <SectionList />\n    <SectionRating />\n    <SectionQuickAdd />\n  </Stack>\n)\n","import { Container } from '@mui/material'\nimport React from 'react'\nimport { IntroScreen } from './layout/IntroScreen'\nimport { Journal } from './layout/Journal'\nimport { useAppSelector } from './redux/store'\n\nconst App = () => {\n  const sections = useAppSelector((state) => Object.values(state.sections))\n  const isUsed = sections.length > 0\n  return (\n    <Container maxWidth='sm' sx={{ padding: 2 }}>\n      {isUsed ? <Journal /> : <IntroScreen />}\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename='/journal'>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}